name: Technology API CI/CD Pipeline

on: push

env:
  HELM_EXPERIMENTAL_OCI: 1
  NAMESPACE: thoughtworks-developer
  REPOSITORY: technology-api
  CONTAINER_REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v2
        with:
          java-version: '15'
          distribution: 'adopt'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify
      - run: mkdir staging && cp target/*.jar staging
      - uses: actions/upload-artifact@v2
        with:
          name: Package
          path: staging
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Docker image
        run: docker build -t $NAMESPACE/$REPOSITORY .
      - uses: secrethub/actions/env-export@v0.1.0
        env:
          APP_VERSION: 0.0.1
          SECRETHUB_CREDENTIAL: ${{ secrets.SECRETHUB_CREDENTIAL }}
          CONTAINER_REGISTRY_USER: secrethub://thoughtworks-developer/technology-api/git/user
          CONTAINER_REGISTRY_PASSWORD: secrethub://thoughtworks-developer/technology-api/git/password
      - name: push docker image
        run: |
          echo "$CONTAINER_REGISTRY_PASSWORD" | docker login ${{ env.CONTAINER_REGISTRY }} --username "$CONTAINER_REGISTRY_USER" --password-stdin
          docker tag ${{ env.NAMESPACE }}/${{ env.REPOSITORY }} ${{ env.CONTAINER_REGISTRY }}/${{ env.NAMESPACE }}/${{ env.REPOSITORY }}:$APP_VERSION
          docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.NAMESPACE }}/${{ env.REPOSITORY }}:$APP_VERSION
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install helm
        uses: Azure/setup-helm@v1
        env:
          RELEASE_VERSION: 0.1.0
          SECRETHUB_CREDENTIAL: ${{ secrets.SECRETHUB_CREDENTIAL }}
          CONTAINER_REGISTRY_USER: secrethub://thoughtworks-developer/technology-api/git/user
          CONTAINER_REGISTRY_PASSWORD: secrethub://thoughtworks-developer/technology-api/git/password
      - name: publish helm chart
        run: |
          echo "$CONTAINER_REGISTRY_PASSWORD" | helm registry login ${{ env.CONTAINER_REGISTRY }} --username "$CONTAINER_REGISTRY_USER" --password-stdin
          helm chart save charts/. ${{ env.CONTAINER_REGISTRY }}/${{ env.NAMESPACE }}/${{ env.REPOSITORY }}:$RELEASE_VERSION
          helm chart push ${{ env.CONTAINER_REGISTRY }}/${{ env.NAMESPACE }}/${{ env.REPOSITORY }}:$RELEASE_VERSION